"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5554],{5680:(e,t,r)=>{r.d(t,{xA:()=>s,yg:()=>m});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(r),y=a,m=d["".concat(c,".").concat(y)]||d[y]||u[y]||o;return r?n.createElement(m,l(l({ref:t},s),{},{components:r})):n.createElement(m,l({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=y;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},5716:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(8168),a=(r(6540),r(5680));const o={sidebar_position:1},l="Install and run",i={unversionedId:"quick-start/install-run",id:"quick-start/install-run",title:"Install and run",description:"Choose your favorite way to install Mockaco locally or in your server.",source:"@site/docs/quick-start/install-run.md",sourceDirName:"quick-start",slug:"/quick-start/install-run",permalink:"/Mockaco/docs/quick-start/install-run",draft:!1,editUrl:"https://github.com/natenho/Mockaco/tree/master/website/docs/quick-start/install-run.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/Mockaco/docs/category/quick-start"},next:{title:"Create a mock",permalink:"/Mockaco/docs/quick-start/create-mock"}},c={},p=[{value:".NET CLI",id:"net-cli",level:2},{value:"Docker",id:"docker",level:2},{value:"Docker command breakdown",id:"docker-command-breakdown",level:3},{value:"From sources",id:"from-sources",level:2}],s={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.yg)(d,(0,n.A)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"install-and-run"},"Install and run"),(0,a.yg)("p",null,"Choose your favorite way to install Mockaco locally or in your server."),(0,a.yg)("h2",{id:"net-cli"},".NET CLI"),(0,a.yg)("p",null,"Install and run as a dotnet tool:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-console"},'$ dotnet tool install -g mockaco\n$ mockaco --urls "http://localhost:5000"\n')),(0,a.yg)("p",null,"A random local port is chosen if ",(0,a.yg)("inlineCode",{parentName:"p"},"--urls")," parameter is not provided."),(0,a.yg)("h2",{id:"docker"},"Docker"),(0,a.yg)("p",null,"You can run Mockaco from the official ",(0,a.yg)("a",{parentName:"p",href:"https://hub.docker.com/r/natenho/mockaco"},"Docker image")," (replace ",(0,a.yg)("inlineCode",{parentName:"p"},"/your/folder")," with an existing directory of your preference):"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-console"},"$ docker run --pull always -it --rm -p 5000:5000 -v /your/folder:/app/Mocks natenho/mockaco\n")),(0,a.yg)("h3",{id:"docker-command-breakdown"},"Docker command breakdown"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Flag"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Purpose"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"docker run")),(0,a.yg)("td",{parentName:"tr",align:"left"},"The foundational command"),(0,a.yg)("td",{parentName:"tr",align:"left"},"Creates and starts a new Docker container.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"--pull always")),(0,a.yg)("td",{parentName:"tr",align:"left"},"Always pull image"),(0,a.yg)("td",{parentName:"tr",align:"left"},"Ensures you're running the latest version from the registry.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"-it")),(0,a.yg)("td",{parentName:"tr",align:"left"},"Interactive TTY"),(0,a.yg)("td",{parentName:"tr",align:"left"},"Attaches your terminal to the container to see logs and use ",(0,a.yg)("inlineCode",{parentName:"td"},"Ctrl+C"),".")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"--rm")),(0,a.yg)("td",{parentName:"tr",align:"left"},"Remove on exit"),(0,a.yg)("td",{parentName:"tr",align:"left"},"Automatically cleans up and deletes the container when it stops.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"-p 5000:5000")),(0,a.yg)("td",{parentName:"tr",align:"left"},"Publish port"),(0,a.yg)("td",{parentName:"tr",align:"left"},"Maps ",(0,a.yg)("inlineCode",{parentName:"td"},"localhost:5000")," on your machine to port ",(0,a.yg)("inlineCode",{parentName:"td"},"5000")," in the container. The port exposed by the container is 5000 (HTTP) by default.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"-v /your/folder:/app/Mocks")),(0,a.yg)("td",{parentName:"tr",align:"left"},"Mount volume"),(0,a.yg)("td",{parentName:"tr",align:"left"},"Links your local folder to the container so ",(0,a.yg)("inlineCode",{parentName:"td"},"mockaco")," can read your mock files.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"natenho/mockaco")),(0,a.yg)("td",{parentName:"tr",align:"left"},"The Docker image"),(0,a.yg)("td",{parentName:"tr",align:"left"},"The actual application being run\u2014the mock server itself.")))),(0,a.yg)("h2",{id:"from-sources"},"From sources"),(0,a.yg)("p",null,"Or your can run it directly from sources:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-console"},"$ git clone https://github.com/natenho/Mockaco.git\n$ cd Mockaco\\src\\Mockaco\n$ dotnet run\n")),(0,a.yg)("p",null,"A random local port is chosen if ",(0,a.yg)("inlineCode",{parentName:"p"},"--urls")," parameter is not provided."))}u.isMDXComponent=!0}}]);